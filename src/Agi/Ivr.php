<?php
/**
 * Created by IntelliJ IDEA.
 * User: vmuniz
 * Date: 15/06/17
 * Time: 18:58
 */

namespace App\Agi;

use App\Entity\IvrOption;
use Symfony\Component\Console\Input\InputArgument;

class Ivr extends Base
{

    /**
     * @var \App\Entity\Ivr
     */
    private $ivr;

    public function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub

        $this->setName('pbx:ivr')
            ->setDescription('Agi para URA')
            ->addArgument('exten', InputArgument::REQUIRED, 'Numero da URA.');
    }

    protected function pre()
    {

        $ivrExten = $this->input->getArgument('exten');

        $ivr = $this->getContainer()->get('doctrine.orm.default_entity_manager')->getRepository(\App\Entity\Ivr::class)->findOneBy(['id' => $ivrExten]);

        if (!$ivr) {
            return false;
        }

        $this->ivr = $ivr;

        return true;
    }

    protected function initVar()
    {
        $rootDir = $this->getContainer()->get('kernel')->getRootDir();

        $this->agi->exec('SET', 'IVR_MAX_TRY='. $this->ivr->getMaxTry());// . $this->ivr->getMaxTry());
        $this->agi->exec('SET', 'IVR_TRY=0');
        $this->agi->exec('SET', 'IVR_TIMEOUT=' . $this->ivr->getTimeout());

        if ($this->ivr->getAudioWelcome()) {

            $file = $rootDir . '/../var/data/ivr/' . $this->ivr->getId() . '/' . $this->ivr->getAudioWelcome();

            $this->agi->exec('SET', 'IVR_AUDIO_WELCOME=' . str_replace(['.wav', '.gsm'], null, $file));
        } else {
            $this->agi->exec('SET', 'IVR_AUDIO_WELCOME=');
        }

        if ($this->ivr->getAudioRead() && $this->ivr->getAudioRead() !== 'beep') {
            $file = $rootDir . '/../var/data/ivr/' . $this->ivr->getId() . '/' . $this->ivr->getAudioRead();
            $this->agi->exec('SET', 'IVR_AUDIO_READ=' . str_replace(['.wav', '.gsm'], null, $file));
        } else {
            $this->agi->exec('SET', 'IVR_AUDIO_READ=beep');
        }

        if ($this->ivr->getDialBranchPermit()) {
            $this->agi->exec('SET', 'IVR_MAX_DIGIT=4'); // . $this->ivr->getMaxDigit());
            $this->agi->exec('SET', 'DIAL_BRANCH_PERMIT=TRUE'); // . $this->ivr->getMaxDigit());
        } else {
            $this->agi->exec('SET', 'IVR_MAX_DIGIT=1'); // . $this->ivr->getMaxDigit());
            $this->agi->exec('SET', 'DIAL_BRANCH_PERMIT=FALSE'); // . $this->ivr->getMaxDigit());

        }

        $this->agi->exec('SET', 'IVR_OPTION=');

    }

    protected function gotoOption()
    {

        $option = $this->agi->get_variable('IVR_OPTION', true);

        $this->agi->exec('SET', 'GOTO_CONTEXT=');
        $this->agi->exec('SET', 'GOTO_PRIORITY=');
        $this->agi->exec('SET', 'GOTO_EXTEN=');

        $this->agi->verbose('OPTION: ' . $option);

        $ivr = $this->ivr;

        $ivrOption = $this->getContainer()->get('doctrine.orm.default_entity_manager')->getRepository(IvrOption::class)->findOneBy(['ivr' => $ivr, 'option' => $option]);
        if ($ivrOption === null) {
            if (!$this->checkGotoBranch($ivr, $option)) {
                $this->setGoto('ivr-dial');
            }
            return;
        }

        if ($ivrOption->getGoto() === null) {
            if (!$this->checkGotoBranch($ivr, $option)) {
                $this->setGoto('ivr-dial');
            }
            return;
        }

        $checkGoto = $this->checkGoto($ivrOption->getGoto());

        if ($checkGoto) {
            return;
        }

        $this->checkGotoBranch($ivr, $option);

    }

    private function checkGotoBranch($ivr, $exten) {

        if (!$ivr->getDialBranchPermit()) {
            return false;
        }

        $branch = $this->getContainer()->get('doctrine.orm.default_entity_manager')->getRepository(\App\Entity\Branch::class)->find($exten);

        if (!$branch) {
            return false;
        }

        $this->agi->exec('SET', 'GOTO_CONTEXT=branch');
        $this->agi->exec('SET', 'GOTO_PRIORITY=1');
        $this->agi->exec('SET', 'GOTO_EXTEN=' . $exten);

        return true;
    }


}